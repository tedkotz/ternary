// Set initiailization vector
--: 10-;

// Start code
10-:

//  POP R_5, PC+3
// -11----1-;
// --00-0000;
// 00000010-;
POP( N05, PC, _NOP, +0);

// Address of top of stack (-729)
//00-000000;
//000000000;
//000000000;
TRIWORD( 0,0,-000000);

// LD1 R3, R0+9
//010------;
//--0000000;
//00000100-;
LD1( P03, ZERO, _NOP, +00);

// LD2 R2, R0+9
//01------0;
//--0000000;
//00000100-;
LD2( P02, ZERO, _NOP, +00);


// LD3 R1, R0+9
//001-----1;
//--0000000;
//00000100-;
LD3( P01, ZERO, _NOP, +00);

// PSH R_5-3, neg(R 1)
//-11----10;
//--001----;
//000000-0-;
PSH( N05, P01, _NEG, -0);

// POP R1, N5+3
//001----1-;
//---110000;
//00000010-;
POP( P01, N05, _NOP, +0);

// ST1 R0+6, neg(R1 )
//000----0-;
//--001----;
//000001-0-;
ST1( ZERO, P01, _NEG, +-0 );
LD3( P05, ZERO, _NOP, +-0);


// ST2 R0+6, inc(R1 )
//000----00;
//--001---0;
//000001-0-;
ST2( ZERO, P01, _INC, +-0 );
LD3( P05, ZERO, _NOP, +-0);

// ST3 R0+6, dec(R1 )
//000----01;
//--001---1;
//000001-0-;
ST3( ZERO, P01, _DEC, +-0 );
LD3( P05, ZERO, _NOP, +-0);

// ST1 R0+6, abn(R1 )
//000----0-;
//--001--0-;
//000001-0-;
ST1( ZERO, P01, _ABN, +-0 );
LD3( P05, ZERO, _NOP, +-0);

// ST2 R0+6, abs(R1 )
//000----00;
//--001--00;
//000001-0-;
ST2( ZERO, P01, _ABS, +-0 );
LD3( P05, ZERO, _NOP, +-0);

// ST3 R0+6, flt(R1 )
//000----01;
//--001--01;
//000001-0-;
ST3( ZERO, P01, _FLT, +-0 );
LD3( P05, ZERO, _NOP, +-0);

ADD( P05, P01, _NOP, P02, _NEG);
